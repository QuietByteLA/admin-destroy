# 🎯 Workflow para destruir la infraestructura con Terraform
name: "🛑 Destroy Terraform"

on:
  workflow_dispatch:  # 🔄 Permite ejecutar manualmente el workflow

jobs:
  destroy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📥 Checkout el repo con submódulos
        uses: actions/checkout@v4
        with:
          repository: QuietByteLA/proyectGYM-monorepo
          ref: staging  # Clonar la rama staging
          fetch-depth: 0  # Traer todas las ramas
          token: ${{ secrets.TERRAFORM_DESTROY }}
          submodules: recursive  # 🔹 Clona los submódulos

      - name: 🔄 Actualizar submódulos (si no se clonan bien)
        run: |
          git submodule update --init --recursive
          git submodule foreach git pull origin main

      - name: 🔍 Verificar ramas disponibles
        run: |
          git branch -r

      - name: ✅ Confirmar la rama actual
        run: |
          git branch --show-current

      - name: 📂 Verificar contenido del repositorio
        run: |
          echo "📌 Contenido raíz del repo:"
          ls -R
          echo "📌 Contenido de infra/:"
          ls -R infra/ || echo "⚠️ ERROR: La carpeta infra/ no existe"

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::267816782242:role/rol_github
          role-session-name: github-actions
          aws-region: us-east-1

      - name: 🛠️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: 🚀 Initialize Terraform con backend S3 y variables
        run: |
          cd infra || exit 1
          terraform init -reconfigure \
          -backend-config="${{ github.ref_name }}.tfvars"

      - name: 🔥 Destroy All Terraform Resources
        run: |
          cd infra || exit 1
          terraform destroy -auto-approve -var-file=${{ github.ref_name }}.tfvars

      